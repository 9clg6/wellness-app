lane :beta do
  xcode_select(ENV.fetch("XCODE_PATH", "/Applications/Xcode.app"))

  # S'assurer que le CLI flutterfire est disponible pendant le build Xcode
  ENV["PATH"] = "#{ENV['HOME']}/.pub-cache/bin:#{ENV['PATH']}"
  sh("fvm dart pub global activate flutterfire_cli")

  keychain_name = ENV.fetch("KEYCHAIN_NAME", "login.keychain-db")
  team_id   = ENV.fetch("APPLE_TEAM_ID")
  bundle_id = ENV.fetch("BUNDLE_ID", "fr.yellowstone.welly.app")
  profile_name = ENV.fetch("MATCH_PROFILE_NAME", "match AppStore #{bundle_id} 1759307619")

  # Manual signing pendant le build
  update_code_signing_settings(
    use_automatic_signing: false,
    path: "Runner.xcodeproj",
    targets: ["Runner"],
    team_id: team_id,
    code_sign_identity: "Apple Distribution",
    profile_name: profile_name,
    bundle_identifier: bundle_id
  )

  # Repo match (doit rester privé). L’URL peut venir d’ENV
  sync_code_signing(
    type: "appstore",
    readonly: false,
    git_url: ENV.fetch("MATCH_GIT_URL"),
    keychain_name: keychain_name,
    keychain_password: ENV.fetch("MATCH_KEYCHAIN_PASSWORD")
  )

  # API key ASC (NE PAS logger les valeurs)
  api_key = app_store_connect_api_key(
    key_id:       ENV.fetch("APP_STORE_CONNECT_KEY_ID"),
    issuer_id:    ENV.fetch("APP_STORE_CONNECT_ISSUER_ID"),
    key_filepath: File.absolute_path(ENV.fetch("APP_STORE_CONNECT_KEY_PATH"))
  )

  build_app(
    scheme: "prod",
    export_method: "app-store",
    export_team_id: team_id,
    codesigning_identity: "Apple Distribution",
    export_options: {
      provisioningProfiles: { bundle_id => profile_name },
      signingStyle: "manual",
      signingCertificate: "Apple Distribution"
    },
    xcargs: "CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM=#{team_id} " \
            "OTHER_CODE_SIGN_FLAGS='--keychain ~/Library/Keychains/#{keychain_name}'"
  )

  # Upload des dSYM Crashlytics en post-archive (fiable, indépendant du script Xcode)
  dsym_path = Actions.lane_context[SharedValues::DSYM_OUTPUT_PATH]
  upload_symbols_to_crashlytics(
    gsp_path: File.join(Dir.pwd, "../Runner/GoogleService-Info.plist"),
    dsym_path: dsym_path
  )

  upload_to_testflight(
    api_key: api_key,
    skip_waiting_for_build_processing: true
  )

  update_code_signing_settings(
    use_automatic_signing: true,
    path: "Runner.xcodeproj",
    targets: ["Runner"],
    team_id: team_id
  )
end
